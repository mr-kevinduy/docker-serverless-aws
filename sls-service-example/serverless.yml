# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: sls-service-example
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x

  # you can overwrite defaults here
  #  stage: dev
  region: ap-southeast-1

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_NAMESPACE}*"

  # you can define service wide environment variables here
  environment:
    DYNAMODB_NAMESPACE: ${self:service}-${opt:stage, self:provider.stage}

# you can add packaging information here
package:
  # include:
  #   - include-me.js
  #   - include-me-dir/**
  exclude:
    - test/**

functions:
  ## Users API
  createUser:
    handler: src/User.create
    events:
      - http:
        method: POST
        path: /api/users/create
        cors: true

  getUser:
    handler: src/User.get
    events:
      - http:
        method: GET
        path: /api/users
        cors: true

# you can add CloudFormation resource templates here
resources:
  Resources:
    UsersDynamoDBTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_NAMESPACE}-users
        AttributeDefinitions:
          -
            AttributeName: username
            AttributeType: S

          -
            AttributeName: email
            AttributeType: S
        KeySchema:
          -
            AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
